; This code was automatically generated by
; com.zygateley.compiler.Assembler#assemble
; using the GoAsm assembly language

Data Section
    ; String pool
    str0	DB	"Hello, World",10,0
    trueString	DB	"TRUE",0
    falseString	DB	"FALSE",0
    
    ; Other global variables
    heapHandle	DD	0
    inputHandle	DD	0
    outputHandle	DD	0
    tempGlobal	DD	64 Dup 0

Code Section
start:
    ; Prepare environment for input and output
    ; Get process heap handle
    Call GetProcessHeap
    Mov [heapHandle], Eax               ; Save heap handle
    ; Get input handle
    Push -10D                           ; Parameter for GetStdHandle
    Call GetStdHandle
    Mov [inputHandle], Eax              ; Save input handle
    ; Get output handle
    Push -11D                           ; Parameter for GetStdHandle
    Call GetStdHandle
    Mov [outputHandle], Eax             ; Save output handle
    
    ; Open scope
    Mov Eax, 1028D                      ; Create heap allocation pool
    Push Eax                            ; Anonymous value added to stack
    Push 0                              ; Anonymous value added to stack
    Push [heapHandle]                   ; Anonymous value added to stack
    Call HeapAlloc
    Mov W[Eax], 0                       ; Number of current allocations
    Mov W[Eax + 2], 256                 ; Current allocation capacity
    Mov Ebx, Eax                        ; Address of heap allocation pool
    Push Ebx                            ; Linked variable added to stack
    ; Prepare if-then conditional
    ; If true, go to label0
    ; Finally, go to label1
    ; Prepare operand
    Mov Eax, 1D
    Mov Ecx, 1                          ; assemble operand TRUE
    Push Ecx                            ; Linked variable added to stack
    Cmp Ecx, 0                          ; Determine if condition is false
    Jz >> label1                        ; If condition is false, jump
    label0:
        ; Open scope
        Mov Eax, 1028D                  ; Create heap allocation pool
        Push Eax                        ; Anonymous value added to stack
        Push 0                          ; Anonymous value added to stack
        Push [heapHandle]               ; Anonymous value added to stack
        Call HeapAlloc
        Mov W[Eax], 0                   ; Number of current allocations
        Mov W[Eax + 2], 256             ; Current allocation capacity
        Mov Edx, Eax                    ; Address of heap allocation pool
        Push Edx                        ; Linked variable added to stack
        ; Output
        ; Prepare operand
        Mov Eax, 13D
        Mov Esi, Addr str0              ; assemble operand LITERAL
        Push Esi                        ; Linked variable added to stack
        Push 0                          ; Anonymous value added to stack
        Push Addr tempGlobal            ; Anonymous value added to stack
        Push Eax                        ; Anonymous value added to stack
        Push [Esp + 12D]                ; Anonymous value added to stack
        Push [outputHandle]             ; Anonymous value added to stack
        Call WriteConsoleA
        
        Push [Esp + 4D]                 ; Anonymous value added to stack
        Push [heapHandle]               ; Anonymous value added to stack
        Call free_heap_allocations
        Add Esp, 8D                     ; Close scope
        
    
    label1:
    
    Push [Esp + 4D]                     ; Anonymous value added to stack
    Push [heapHandle]                   ; Anonymous value added to stack
    Call free_heap_allocations
    Add Esp, 8D                         ; Close scope
    
    Ret                                 ; Program finish
    
